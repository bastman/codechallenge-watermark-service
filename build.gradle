group 'com.bastman.codechallenge-watermark-service'
version '1.0-SNAPSHOT'

buildscript {

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")
    }
}



subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'org.junit.platform.gradle.plugin'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    buildscript {
        repositories {
            maven { url "https://plugins.gradle.org/m2/" }
            mavenCentral()
            jcenter()
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

        // junit5
        testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

        testCompile("org.junit.platform:junit-platform-console:${junitPlatformVersion}")
        testRuntime("org.junit.platform:junit-platform-console:${junitPlatformVersion}")

        testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
        testRuntime("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

        testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

        // kluent assertions
        testCompile("org.amshove.kluent:kluent:${kluentVersion}")
    }

    kotlin {
        experimental { coroutines 'enable' }
    }

    junitPlatform {
        // run JUnit 4 tests with the standard Gradle test task?
        enableStandardTestTask true
        // Only run JUnit Jupiter tests with the JUnit Platform
        filters.engines.include 'spek', 'junit-jupiter', 'junit-vintage'
        reportsDir file('build/test-results/junit-platform')
        filters.packages.include 'com.bastman.codechallenge.watermarkservice'
        filters.includeClassNamePatterns '.*Test', '.*Tests', '.*Spec'
        //filters.exclueClassNamePatterns '*$*'

    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}